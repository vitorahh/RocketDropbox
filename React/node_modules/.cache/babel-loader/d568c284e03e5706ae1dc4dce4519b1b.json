{"ast":null,"code":"/**\r\n * Module dependencies.\r\n */\nvar parseuri = require('parseuri');\n\nvar debug = require('debug')('socket.io-client:url');\n/**\r\n * Module exports.\r\n */\n\n\nmodule.exports = url;\n/**\r\n * URL parser.\r\n *\r\n * @param {String} url\r\n * @param {Object} An object meant to mimic window.location.\r\n *                 Defaults to window.location.\r\n * @api public\r\n */\n\nfunction url(uri, loc) {\n  var obj = uri; // default to window.location\n\n  loc = loc || typeof location !== 'undefined' && location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host; // relative path support\n\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    } // parse\n\n\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  } // make sure we treat `localhost:80` and `localhost` equally\n\n\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host; // define unique id\n\n  obj.id = obj.protocol + '://' + host + ':' + obj.port; // define href\n\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : ':' + obj.port);\n  return obj;\n}","map":{"version":3,"sources":["C:/Users/DEV05/Documents/GitHub/NodeJS/RocketDropbox/React/node_modules/socket.io-client/lib/url.js"],"names":["parseuri","require","debug","module","exports","url","uri","loc","obj","location","protocol","host","charAt","test","port","path","ipv6","indexOf","id","href"],"mappings":"AACA;;;AAIA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAAP,CAAiB,sBAAjB,CAAZ;AAEA;;;;;AAIAE,MAAM,CAACC,OAAP,GAAiBC,GAAjB;AAEA;;;;;;;;;AASA,SAASA,GAAT,CAAcC,GAAd,EAAmBC,GAAnB,EAAwB;AACtB,MAAIC,GAAG,GAAGF,GAAV,CADsB,CAGtB;;AACAC,EAAAA,GAAG,GAAGA,GAAG,IAAK,OAAOE,QAAP,KAAoB,WAApB,IAAmCA,QAAjD;AACA,MAAI,QAAQH,GAAZ,EAAiBA,GAAG,GAAGC,GAAG,CAACG,QAAJ,GAAe,IAAf,GAAsBH,GAAG,CAACI,IAAhC,CALK,CAOtB;;AACA,MAAI,aAAa,OAAOL,GAAxB,EAA6B;AAC3B,QAAI,QAAQA,GAAG,CAACM,MAAJ,CAAW,CAAX,CAAZ,EAA2B;AACzB,UAAI,QAAQN,GAAG,CAACM,MAAJ,CAAW,CAAX,CAAZ,EAA2B;AACzBN,QAAAA,GAAG,GAAGC,GAAG,CAACG,QAAJ,GAAeJ,GAArB;AACD,OAFD,MAEO;AACLA,QAAAA,GAAG,GAAGC,GAAG,CAACI,IAAJ,GAAWL,GAAjB;AACD;AACF;;AAED,QAAI,CAAC,sBAAsBO,IAAtB,CAA2BP,GAA3B,CAAL,EAAsC;AACpCJ,MAAAA,KAAK,CAAC,sBAAD,EAAyBI,GAAzB,CAAL;;AACA,UAAI,gBAAgB,OAAOC,GAA3B,EAAgC;AAC9BD,QAAAA,GAAG,GAAGC,GAAG,CAACG,QAAJ,GAAe,IAAf,GAAsBJ,GAA5B;AACD,OAFD,MAEO;AACLA,QAAAA,GAAG,GAAG,aAAaA,GAAnB;AACD;AACF,KAhB0B,CAkB3B;;;AACAJ,IAAAA,KAAK,CAAC,UAAD,EAAaI,GAAb,CAAL;AACAE,IAAAA,GAAG,GAAGR,QAAQ,CAACM,GAAD,CAAd;AACD,GA7BqB,CA+BtB;;;AACA,MAAI,CAACE,GAAG,CAACM,IAAT,EAAe;AACb,QAAI,cAAcD,IAAd,CAAmBL,GAAG,CAACE,QAAvB,CAAJ,EAAsC;AACpCF,MAAAA,GAAG,CAACM,IAAJ,GAAW,IAAX;AACD,KAFD,MAEO,IAAI,eAAeD,IAAf,CAAoBL,GAAG,CAACE,QAAxB,CAAJ,EAAuC;AAC5CF,MAAAA,GAAG,CAACM,IAAJ,GAAW,KAAX;AACD;AACF;;AAEDN,EAAAA,GAAG,CAACO,IAAJ,GAAWP,GAAG,CAACO,IAAJ,IAAY,GAAvB;AAEA,MAAIC,IAAI,GAAGR,GAAG,CAACG,IAAJ,CAASM,OAAT,CAAiB,GAAjB,MAA0B,CAAC,CAAtC;AACA,MAAIN,IAAI,GAAGK,IAAI,GAAG,MAAMR,GAAG,CAACG,IAAV,GAAiB,GAApB,GAA0BH,GAAG,CAACG,IAA7C,CA3CsB,CA6CtB;;AACAH,EAAAA,GAAG,CAACU,EAAJ,GAASV,GAAG,CAACE,QAAJ,GAAe,KAAf,GAAuBC,IAAvB,GAA8B,GAA9B,GAAoCH,GAAG,CAACM,IAAjD,CA9CsB,CA+CtB;;AACAN,EAAAA,GAAG,CAACW,IAAJ,GAAWX,GAAG,CAACE,QAAJ,GAAe,KAAf,GAAuBC,IAAvB,IAA+BJ,GAAG,IAAIA,GAAG,CAACO,IAAJ,KAAaN,GAAG,CAACM,IAAxB,GAA+B,EAA/B,GAAqC,MAAMN,GAAG,CAACM,IAA9E,CAAX;AAEA,SAAON,GAAP;AACD","sourcesContent":["\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\nvar parseuri = require('parseuri');\r\nvar debug = require('debug')('socket.io-client:url');\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = url;\r\n\r\n/**\r\n * URL parser.\r\n *\r\n * @param {String} url\r\n * @param {Object} An object meant to mimic window.location.\r\n *                 Defaults to window.location.\r\n * @api public\r\n */\r\n\r\nfunction url (uri, loc) {\r\n  var obj = uri;\r\n\r\n  // default to window.location\r\n  loc = loc || (typeof location !== 'undefined' && location);\r\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\r\n\r\n  // relative path support\r\n  if ('string' === typeof uri) {\r\n    if ('/' === uri.charAt(0)) {\r\n      if ('/' === uri.charAt(1)) {\r\n        uri = loc.protocol + uri;\r\n      } else {\r\n        uri = loc.host + uri;\r\n      }\r\n    }\r\n\r\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\r\n      debug('protocol-less url %s', uri);\r\n      if ('undefined' !== typeof loc) {\r\n        uri = loc.protocol + '//' + uri;\r\n      } else {\r\n        uri = 'https://' + uri;\r\n      }\r\n    }\r\n\r\n    // parse\r\n    debug('parse %s', uri);\r\n    obj = parseuri(uri);\r\n  }\r\n\r\n  // make sure we treat `localhost:80` and `localhost` equally\r\n  if (!obj.port) {\r\n    if (/^(http|ws)$/.test(obj.protocol)) {\r\n      obj.port = '80';\r\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\r\n      obj.port = '443';\r\n    }\r\n  }\r\n\r\n  obj.path = obj.path || '/';\r\n\r\n  var ipv6 = obj.host.indexOf(':') !== -1;\r\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\r\n\r\n  // define unique id\r\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\r\n  // define href\r\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\r\n\r\n  return obj;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}