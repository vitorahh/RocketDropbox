{"ast":null,"code":"var parse = require('../parse/index.js');\n\nvar differenceInCalendarDays = require('../difference_in_calendar_days/index.js');\n\nvar compareAsc = require('../compare_asc/index.js');\n/**\r\n * @category Day Helpers\r\n * @summary Get the number of full days between the given dates.\r\n *\r\n * @description\r\n * Get the number of full days between the given dates.\r\n *\r\n * @param {Date|String|Number} dateLeft - the later date\r\n * @param {Date|String|Number} dateRight - the earlier date\r\n * @returns {Number} the number of full days\r\n *\r\n * @example\r\n * // How many full days are between\r\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\r\n * var result = differenceInDays(\r\n *   new Date(2012, 6, 2, 0, 0),\r\n *   new Date(2011, 6, 2, 23, 0)\r\n * )\r\n * //=> 365\r\n */\n\n\nfunction differenceInDays(dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft);\n  var dateRight = parse(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));\n  dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastDayNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  return sign * (difference - isLastDayNotFull);\n}\n\nmodule.exports = differenceInDays;","map":{"version":3,"sources":["C:/Users/Dominic/Documents/RocketDropbox/node_modules/date-fns/difference_in_days/index.js"],"names":["parse","require","differenceInCalendarDays","compareAsc","differenceInDays","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","sign","difference","Math","abs","setDate","getDate","isLastDayNotFull","module","exports"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,mBAAD,CAAnB;;AACA,IAAIC,wBAAwB,GAAGD,OAAO,CAAC,yCAAD,CAAtC;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,yBAAD,CAAxB;AAEA;;;;;;;;;;;;;;;;;;;;;;AAoBA,SAASG,gBAAT,CAA2BC,aAA3B,EAA0CC,cAA1C,EAA0D;AACxD,MAAIC,QAAQ,GAAGP,KAAK,CAACK,aAAD,CAApB;AACA,MAAIG,SAAS,GAAGR,KAAK,CAACM,cAAD,CAArB;AAEA,MAAIG,IAAI,GAAGN,UAAU,CAACI,QAAD,EAAWC,SAAX,CAArB;AACA,MAAIE,UAAU,GAAGC,IAAI,CAACC,GAAL,CAASV,wBAAwB,CAACK,QAAD,EAAWC,SAAX,CAAjC,CAAjB;AACAD,EAAAA,QAAQ,CAACM,OAAT,CAAiBN,QAAQ,CAACO,OAAT,KAAqBL,IAAI,GAAGC,UAA7C,EANwD,CAQxD;AACA;;AACA,MAAIK,gBAAgB,GAAGZ,UAAU,CAACI,QAAD,EAAWC,SAAX,CAAV,KAAoC,CAACC,IAA5D;AACA,SAAOA,IAAI,IAAIC,UAAU,GAAGK,gBAAjB,CAAX;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBb,gBAAjB","sourcesContent":["var parse = require('../parse/index.js')\r\nvar differenceInCalendarDays = require('../difference_in_calendar_days/index.js')\r\nvar compareAsc = require('../compare_asc/index.js')\r\n\r\n/**\r\n * @category Day Helpers\r\n * @summary Get the number of full days between the given dates.\r\n *\r\n * @description\r\n * Get the number of full days between the given dates.\r\n *\r\n * @param {Date|String|Number} dateLeft - the later date\r\n * @param {Date|String|Number} dateRight - the earlier date\r\n * @returns {Number} the number of full days\r\n *\r\n * @example\r\n * // How many full days are between\r\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\r\n * var result = differenceInDays(\r\n *   new Date(2012, 6, 2, 0, 0),\r\n *   new Date(2011, 6, 2, 23, 0)\r\n * )\r\n * //=> 365\r\n */\r\nfunction differenceInDays (dirtyDateLeft, dirtyDateRight) {\r\n  var dateLeft = parse(dirtyDateLeft)\r\n  var dateRight = parse(dirtyDateRight)\r\n\r\n  var sign = compareAsc(dateLeft, dateRight)\r\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight))\r\n  dateLeft.setDate(dateLeft.getDate() - sign * difference)\r\n\r\n  // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\r\n  // If so, result must be decreased by 1 in absolute value\r\n  var isLastDayNotFull = compareAsc(dateLeft, dateRight) === -sign\r\n  return sign * (difference - isLastDayNotFull)\r\n}\r\n\r\nmodule.exports = differenceInDays\r\n"]},"metadata":{},"sourceType":"script"}