{"ast":null,"code":"var parse = require('../parse/index.js');\n/**\r\n * @category Weekday Helpers\r\n * @summary Get the day of the ISO week of the given date.\r\n *\r\n * @description\r\n * Get the day of the ISO week of the given date,\r\n * which is 7 for Sunday, 1 for Monday etc.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @param {Date|String|Number} date - the given date\r\n * @returns {Number} the day of ISO week\r\n *\r\n * @example\r\n * // Which day of the ISO week is 26 February 2012?\r\n * var result = getISODay(new Date(2012, 1, 26))\r\n * //=> 7\r\n */\n\n\nfunction getISODay(dirtyDate) {\n  var date = parse(dirtyDate);\n  var day = date.getDay();\n\n  if (day === 0) {\n    day = 7;\n  }\n\n  return day;\n}\n\nmodule.exports = getISODay;","map":{"version":3,"sources":["C:/Users/DEV05/Documents/GitHub/NodeJS/RocketDropbox/React/node_modules/date-fns/get_iso_day/index.js"],"names":["parse","require","getISODay","dirtyDate","date","day","getDay","module","exports"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,mBAAD,CAAnB;AAEA;;;;;;;;;;;;;;;;;;;;AAkBA,SAASC,SAAT,CAAoBC,SAApB,EAA+B;AAC7B,MAAIC,IAAI,GAAGJ,KAAK,CAACG,SAAD,CAAhB;AACA,MAAIE,GAAG,GAAGD,IAAI,CAACE,MAAL,EAAV;;AAEA,MAAID,GAAG,KAAK,CAAZ,EAAe;AACbA,IAAAA,GAAG,GAAG,CAAN;AACD;;AAED,SAAOA,GAAP;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBN,SAAjB","sourcesContent":["var parse = require('../parse/index.js')\r\n\r\n/**\r\n * @category Weekday Helpers\r\n * @summary Get the day of the ISO week of the given date.\r\n *\r\n * @description\r\n * Get the day of the ISO week of the given date,\r\n * which is 7 for Sunday, 1 for Monday etc.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @param {Date|String|Number} date - the given date\r\n * @returns {Number} the day of ISO week\r\n *\r\n * @example\r\n * // Which day of the ISO week is 26 February 2012?\r\n * var result = getISODay(new Date(2012, 1, 26))\r\n * //=> 7\r\n */\r\nfunction getISODay (dirtyDate) {\r\n  var date = parse(dirtyDate)\r\n  var day = date.getDay()\r\n\r\n  if (day === 0) {\r\n    day = 7\r\n  }\r\n\r\n  return day\r\n}\r\n\r\nmodule.exports = getISODay\r\n"]},"metadata":{},"sourceType":"script"}