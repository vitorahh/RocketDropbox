{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dominic\\\\Documents\\\\RocketDropbox\\\\src\\\\pages\\\\Box\\\\index.js\";\nimport React, { Component } from 'react';\nimport api from '../../services/api';\nimport Dropzone from 'react-dropzone';\nimport { MdInsertDriveFile } from 'react-icons/md';\nimport { distanceInWords } from 'date-fns';\nimport pt from 'date-fns/locale/pt';\nimport socket from 'socket.io-client';\nimport logo from \"../../assets/logo.svg\";\nimport '../Box/style.css'; // import { Container } from './styles';\n\nexport default class box extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      box: {}\n    };\n\n    this.subscribeToNewFiles = () => {\n      const box = this.props.match.params.id;\n      const io = socket('https://omnistack-backend.herokuapp.com');\n      io.emit('connectRoom', box);\n      io.on('file', data => {\n        this.setState({\n          box: { ...this.state.box,\n            files: [data, ...this.state.box.files]\n          }\n        });\n      });\n    };\n\n    this.handleUpload = files => {\n      files.forEach(file => {\n        const data = new FormData();\n        const box = this.props.match.params.id;\n        data.append('file', file);\n        api.post(`boxes/${box}/files`, data);\n      });\n    };\n  }\n\n  async componentDidMount() {\n    this.subscribeToNewFiles();\n    const box = this.props.match.params.id;\n    const response = await api.get(`boxes/${box}`);\n    this.setState({\n      box: response.data\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"box-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.state.box.title)), React.createElement(Dropzone, {\n      onDropAccepted: this.handleUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => React.createElement(\"div\", Object.assign({\n      className: \"upload\"\n    }, getRootProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Arraste arquivos ou clique aqui\"))), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.box.files && this.state.box.files.map(file => React.createElement(\"li\", {\n      key: file._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"fileInfo\",\n      href: file.url,\n      target: \"/_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(MdInsertDriveFile, {\n      size: 24,\n      color: \"#A5Cfff\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, file.title)), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"h\\xE1 \", \" \", distanceInWords(file.createdAt, new Date(), {\n      locale: pt\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Dominic/Documents/RocketDropbox/src/pages/Box/index.js"],"names":["React","Component","api","Dropzone","MdInsertDriveFile","distanceInWords","pt","socket","box","state","subscribeToNewFiles","props","match","params","id","io","emit","on","data","setState","files","handleUpload","forEach","file","FormData","append","post","componentDidMount","response","get","render","logo","title","getRootProps","getInputProps","map","_id","url","createdAt","Date","locale"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport api from '../../services/api'\r\nimport Dropzone from 'react-dropzone';\r\nimport {MdInsertDriveFile} from 'react-icons/md';\r\nimport { distanceInWords } from 'date-fns';\r\nimport pt from 'date-fns/locale/pt';\r\nimport socket from 'socket.io-client';\r\n\r\nimport logo from '../../assets/logo.svg';\r\nimport '../Box/style.css';\r\n// import { Container } from './styles';\r\n\r\nexport default class box extends Component {\r\n  \r\n  state ={box: {}};\r\n  \r\n  async componentDidMount(){\r\n    this.subscribeToNewFiles();\r\n    const box = this.props.match.params.id;\r\n    const response = await api.get(`boxes/${box}`);\r\n    this.setState( { box:response.data } );\r\n  }\r\n  \r\n  subscribeToNewFiles = () =>{\r\n    const box = this.props.match.params.id;\r\n    const io = socket('https://omnistack-backend.herokuapp.com');\r\n    io.emit('connectRoom', box);\r\n    io.on('file', data => {\r\n      this.setState({ box: {...this.state.box, files:[data,...this.state.box.files] } } );\r\n      \r\n    });\r\n\r\n  };\r\n  handleUpload = (files) =>{\r\n    files.forEach(file =>{\r\n      const data = new FormData();\r\n      const box = this.props.match.params.id\r\n      data.append('file',file);\r\n      api.post(`boxes/${box}/files`,data);\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div id='box-container'>\r\n        <header>\r\n          <img src={logo} alt='' />\r\n          <h1>{this.state.box.title}</h1>\r\n        </header>\r\n        <Dropzone onDropAccepted={this.handleUpload}>\r\n          {({getRootProps, getInputProps}) => (\r\n              <div className=\"upload\" {...getRootProps()}>\r\n                <input {...getInputProps()}></input>\r\n                <p>Arraste arquivos ou clique aqui</p>\r\n              </div>\r\n          )}\r\n        </Dropzone>\r\n        <ul>\r\n          {this.state.box.files && this.state.box.files.map( file => (\r\n            \r\n               <li key={file._id} >\r\n               <a className=\"fileInfo\" href={file.url} target=\"/_blank\">\r\n                 <MdInsertDriveFile size={24} color=\"#A5Cfff\" />\r\n                 <strong>{file.title}</strong>\r\n               </a>\r\n              <span>h√° {\" \"}{distanceInWords(file.createdAt, new Date(), {\r\n                locale: pt\r\n              })}</span>\r\n             </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}