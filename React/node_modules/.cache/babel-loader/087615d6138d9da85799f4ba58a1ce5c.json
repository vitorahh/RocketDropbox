{"ast":null,"code":"var parse = require('../parse/index.js');\n\nvar startOfISOWeek = require('../start_of_iso_week/index.js');\n\nvar startOfISOYear = require('../start_of_iso_year/index.js');\n\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\r\n * @category ISO Week Helpers\r\n * @summary Get the ISO week of the given date.\r\n *\r\n * @description\r\n * Get the ISO week of the given date.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @param {Date|String|Number} date - the given date\r\n * @returns {Number} the ISO week\r\n *\r\n * @example\r\n * // Which week of the ISO-week numbering year is 2 January 2005?\r\n * var result = getISOWeek(new Date(2005, 0, 2))\r\n * //=> 53\r\n */\n\nfunction getISOWeek(dirtyDate) {\n  var date = parse(dirtyDate);\n  var diff = startOfISOWeek(date).getTime() - startOfISOYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}\n\nmodule.exports = getISOWeek;","map":{"version":3,"sources":["C:/Users/DEV05/Documents/GitHub/NodeJS/RocketDropbox/React/node_modules/date-fns/get_iso_week/index.js"],"names":["parse","require","startOfISOWeek","startOfISOYear","MILLISECONDS_IN_WEEK","getISOWeek","dirtyDate","date","diff","getTime","Math","round","module","exports"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,mBAAD,CAAnB;;AACA,IAAIC,cAAc,GAAGD,OAAO,CAAC,+BAAD,CAA5B;;AACA,IAAIE,cAAc,GAAGF,OAAO,CAAC,+BAAD,CAA5B;;AAEA,IAAIG,oBAAoB,GAAG,SAA3B;AAEA;;;;;;;;;;;;;;;;;;AAiBA,SAASC,UAAT,CAAqBC,SAArB,EAAgC;AAC9B,MAAIC,IAAI,GAAGP,KAAK,CAACM,SAAD,CAAhB;AACA,MAAIE,IAAI,GAAGN,cAAc,CAACK,IAAD,CAAd,CAAqBE,OAArB,KAAiCN,cAAc,CAACI,IAAD,CAAd,CAAqBE,OAArB,EAA5C,CAF8B,CAI9B;AACA;AACA;;AACA,SAAOC,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAGJ,oBAAlB,IAA0C,CAAjD;AACD;;AAEDQ,MAAM,CAACC,OAAP,GAAiBR,UAAjB","sourcesContent":["var parse = require('../parse/index.js')\r\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\r\nvar startOfISOYear = require('../start_of_iso_year/index.js')\r\n\r\nvar MILLISECONDS_IN_WEEK = 604800000\r\n\r\n/**\r\n * @category ISO Week Helpers\r\n * @summary Get the ISO week of the given date.\r\n *\r\n * @description\r\n * Get the ISO week of the given date.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @param {Date|String|Number} date - the given date\r\n * @returns {Number} the ISO week\r\n *\r\n * @example\r\n * // Which week of the ISO-week numbering year is 2 January 2005?\r\n * var result = getISOWeek(new Date(2005, 0, 2))\r\n * //=> 53\r\n */\r\nfunction getISOWeek (dirtyDate) {\r\n  var date = parse(dirtyDate)\r\n  var diff = startOfISOWeek(date).getTime() - startOfISOYear(date).getTime()\r\n\r\n  // Round the number of days to the nearest integer\r\n  // because the number of milliseconds in a week is not constant\r\n  // (e.g. it's different in the week of the daylight saving time clock shift)\r\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1\r\n}\r\n\r\nmodule.exports = getISOWeek\r\n"]},"metadata":{},"sourceType":"script"}