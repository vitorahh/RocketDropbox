{"ast":null,"code":"var isDate = require('../is_date/index.js');\n/**\r\n * @category Common Helpers\r\n * @summary Is the given date valid?\r\n *\r\n * @description\r\n * Returns false if argument is Invalid Date and true otherwise.\r\n * Invalid Date is a Date, whose time value is NaN.\r\n *\r\n * Time value of Date: http://es5.github.io/#x15.9.1.1\r\n *\r\n * @param {Date} date - the date to check\r\n * @returns {Boolean} the date is valid\r\n * @throws {TypeError} argument must be an instance of Date\r\n *\r\n * @example\r\n * // For the valid date:\r\n * var result = isValid(new Date(2014, 1, 31))\r\n * //=> true\r\n *\r\n * @example\r\n * // For the invalid date:\r\n * var result = isValid(new Date(''))\r\n * //=> false\r\n */\n\n\nfunction isValid(dirtyDate) {\n  if (isDate(dirtyDate)) {\n    return !isNaN(dirtyDate);\n  } else {\n    throw new TypeError(toString.call(dirtyDate) + ' is not an instance of Date');\n  }\n}\n\nmodule.exports = isValid;","map":{"version":3,"sources":["C:/Users/Dominic/Documents/RepositoriosGitHub/RocketDropbox/React/node_modules/date-fns/is_valid/index.js"],"names":["isDate","require","isValid","dirtyDate","isNaN","TypeError","toString","call","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,qBAAD,CAApB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAASC,OAAT,CAAkBC,SAAlB,EAA6B;AAC3B,MAAIH,MAAM,CAACG,SAAD,CAAV,EAAuB;AACrB,WAAO,CAACC,KAAK,CAACD,SAAD,CAAb;AACD,GAFD,MAEO;AACL,UAAM,IAAIE,SAAJ,CAAcC,QAAQ,CAACC,IAAT,CAAcJ,SAAd,IAA2B,6BAAzC,CAAN;AACD;AACF;;AAEDK,MAAM,CAACC,OAAP,GAAiBP,OAAjB","sourcesContent":["var isDate = require('../is_date/index.js')\r\n\r\n/**\r\n * @category Common Helpers\r\n * @summary Is the given date valid?\r\n *\r\n * @description\r\n * Returns false if argument is Invalid Date and true otherwise.\r\n * Invalid Date is a Date, whose time value is NaN.\r\n *\r\n * Time value of Date: http://es5.github.io/#x15.9.1.1\r\n *\r\n * @param {Date} date - the date to check\r\n * @returns {Boolean} the date is valid\r\n * @throws {TypeError} argument must be an instance of Date\r\n *\r\n * @example\r\n * // For the valid date:\r\n * var result = isValid(new Date(2014, 1, 31))\r\n * //=> true\r\n *\r\n * @example\r\n * // For the invalid date:\r\n * var result = isValid(new Date(''))\r\n * //=> false\r\n */\r\nfunction isValid (dirtyDate) {\r\n  if (isDate(dirtyDate)) {\r\n    return !isNaN(dirtyDate)\r\n  } else {\r\n    throw new TypeError(toString.call(dirtyDate) + ' is not an instance of Date')\r\n  }\r\n}\r\n\r\nmodule.exports = isValid\r\n"]},"metadata":{},"sourceType":"script"}