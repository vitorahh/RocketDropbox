{"ast":null,"code":"var parse = require('../parse/index.js');\n/**\r\n * @category Week Helpers\r\n * @summary Return the start of a week for the given date.\r\n *\r\n * @description\r\n * Return the start of a week for the given date.\r\n * The result will be in the local timezone.\r\n *\r\n * @param {Date|String|Number} date - the original date\r\n * @param {Object} [options] - the object with options\r\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\r\n * @returns {Date} the start of a week\r\n *\r\n * @example\r\n * // The start of a week for 2 September 2014 11:55:00:\r\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\r\n * //=> Sun Aug 31 2014 00:00:00\r\n *\r\n * @example\r\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\r\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\r\n * //=> Mon Sep 01 2014 00:00:00\r\n */\n\n\nfunction startOfWeek(dirtyDate, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? Number(dirtyOptions.weekStartsOn) || 0 : 0;\n  var date = parse(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\nmodule.exports = startOfWeek;","map":{"version":3,"sources":["C:/Users/Dominic/Documents/RocketDropbox/node_modules/date-fns/start_of_week/index.js"],"names":["parse","require","startOfWeek","dirtyDate","dirtyOptions","weekStartsOn","Number","date","day","getDay","diff","setDate","getDate","setHours","module","exports"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,mBAAD,CAAnB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAASC,WAAT,CAAsBC,SAAtB,EAAiCC,YAAjC,EAA+C;AAC7C,MAAIC,YAAY,GAAGD,YAAY,GAAIE,MAAM,CAACF,YAAY,CAACC,YAAd,CAAN,IAAqC,CAAzC,GAA8C,CAA7E;AAEA,MAAIE,IAAI,GAAGP,KAAK,CAACG,SAAD,CAAhB;AACA,MAAIK,GAAG,GAAGD,IAAI,CAACE,MAAL,EAAV;AACA,MAAIC,IAAI,GAAG,CAACF,GAAG,GAAGH,YAAN,GAAqB,CAArB,GAAyB,CAA1B,IAA+BG,GAA/B,GAAqCH,YAAhD;AAEAE,EAAAA,IAAI,CAACI,OAAL,CAAaJ,IAAI,CAACK,OAAL,KAAiBF,IAA9B;AACAH,EAAAA,IAAI,CAACM,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACA,SAAON,IAAP;AACD;;AAEDO,MAAM,CAACC,OAAP,GAAiBb,WAAjB","sourcesContent":["var parse = require('../parse/index.js')\r\n\r\n/**\r\n * @category Week Helpers\r\n * @summary Return the start of a week for the given date.\r\n *\r\n * @description\r\n * Return the start of a week for the given date.\r\n * The result will be in the local timezone.\r\n *\r\n * @param {Date|String|Number} date - the original date\r\n * @param {Object} [options] - the object with options\r\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\r\n * @returns {Date} the start of a week\r\n *\r\n * @example\r\n * // The start of a week for 2 September 2014 11:55:00:\r\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\r\n * //=> Sun Aug 31 2014 00:00:00\r\n *\r\n * @example\r\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\r\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\r\n * //=> Mon Sep 01 2014 00:00:00\r\n */\r\nfunction startOfWeek (dirtyDate, dirtyOptions) {\r\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\r\n\r\n  var date = parse(dirtyDate)\r\n  var day = date.getDay()\r\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn\r\n\r\n  date.setDate(date.getDate() - diff)\r\n  date.setHours(0, 0, 0, 0)\r\n  return date\r\n}\r\n\r\nmodule.exports = startOfWeek\r\n"]},"metadata":{},"sourceType":"script"}