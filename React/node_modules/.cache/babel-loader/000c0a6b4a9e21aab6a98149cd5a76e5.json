{"ast":null,"code":"var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js');\n\nfunction buildFormatLocale() {\n  // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n  var months3char = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  var monthsFull = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  var weekdays2char = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\n  var weekdays3char = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  var weekdaysFull = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  var meridiemUppercase = ['AM', 'PM'];\n  var meridiemLowercase = ['am', 'pm'];\n  var meridiemFull = ['a.m.', 'p.m.'];\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()];\n    },\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()];\n    },\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()];\n    },\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()];\n    },\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()];\n    },\n    // AM, PM\n    'A': function (date) {\n      return date.getHours() / 12 >= 1 ? meridiemUppercase[1] : meridiemUppercase[0];\n    },\n    // am, pm\n    'a': function (date) {\n      return date.getHours() / 12 >= 1 ? meridiemLowercase[1] : meridiemLowercase[0];\n    },\n    // a.m., p.m.\n    'aa': function (date) {\n      return date.getHours() / 12 >= 1 ? meridiemFull[1] : meridiemFull[0];\n    }\n  }; // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W'];\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date));\n    };\n  });\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  };\n}\n\nfunction ordinal(number) {\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nmodule.exports = buildFormatLocale;","map":{"version":3,"sources":["C:/Users/Dominic/Documents/RocketDropbox/node_modules/date-fns/locale/en/build_format_locale/index.js"],"names":["buildFormattingTokensRegExp","require","buildFormatLocale","months3char","monthsFull","weekdays2char","weekdays3char","weekdaysFull","meridiemUppercase","meridiemLowercase","meridiemFull","formatters","date","getMonth","getDay","getHours","ordinalFormatters","forEach","formatterToken","ordinal","formattingTokensRegExp","number","rem100","module","exports"],"mappings":"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","sourcesContent":["var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\r\n\r\nfunction buildFormatLocale () {\r\n  // Note: in English, the names of days of the week and months are capitalized.\r\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\r\n  // Generally, formatted dates should look like they are in the middle of a sentence,\r\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\r\n  var months3char = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n  var monthsFull = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\n  var weekdays2char = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\r\n  var weekdays3char = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\n  var weekdaysFull = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\n  var meridiemUppercase = ['AM', 'PM']\r\n  var meridiemLowercase = ['am', 'pm']\r\n  var meridiemFull = ['a.m.', 'p.m.']\r\n\r\n  var formatters = {\r\n    // Month: Jan, Feb, ..., Dec\r\n    'MMM': function (date) {\r\n      return months3char[date.getMonth()]\r\n    },\r\n\r\n    // Month: January, February, ..., December\r\n    'MMMM': function (date) {\r\n      return monthsFull[date.getMonth()]\r\n    },\r\n\r\n    // Day of week: Su, Mo, ..., Sa\r\n    'dd': function (date) {\r\n      return weekdays2char[date.getDay()]\r\n    },\r\n\r\n    // Day of week: Sun, Mon, ..., Sat\r\n    'ddd': function (date) {\r\n      return weekdays3char[date.getDay()]\r\n    },\r\n\r\n    // Day of week: Sunday, Monday, ..., Saturday\r\n    'dddd': function (date) {\r\n      return weekdaysFull[date.getDay()]\r\n    },\r\n\r\n    // AM, PM\r\n    'A': function (date) {\r\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\r\n    },\r\n\r\n    // am, pm\r\n    'a': function (date) {\r\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\r\n    },\r\n\r\n    // a.m., p.m.\r\n    'aa': function (date) {\r\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\r\n    }\r\n  }\r\n\r\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\r\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\r\n  ordinalFormatters.forEach(function (formatterToken) {\r\n    formatters[formatterToken + 'o'] = function (date, formatters) {\r\n      return ordinal(formatters[formatterToken](date))\r\n    }\r\n  })\r\n\r\n  return {\r\n    formatters: formatters,\r\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\r\n  }\r\n}\r\n\r\nfunction ordinal (number) {\r\n  var rem100 = number % 100\r\n  if (rem100 > 20 || rem100 < 10) {\r\n    switch (rem100 % 10) {\r\n      case 1:\r\n        return number + 'st'\r\n      case 2:\r\n        return number + 'nd'\r\n      case 3:\r\n        return number + 'rd'\r\n    }\r\n  }\r\n  return number + 'th'\r\n}\r\n\r\nmodule.exports = buildFormatLocale\r\n"]},"metadata":{},"sourceType":"script"}