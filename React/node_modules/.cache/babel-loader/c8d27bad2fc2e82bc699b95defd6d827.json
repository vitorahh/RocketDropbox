{"ast":null,"code":"var startOfISOYear = require('../start_of_iso_year/index.js');\n\nvar addWeeks = require('../add_weeks/index.js');\n\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\r\n * @category ISO Week-Numbering Year Helpers\r\n * @summary Get the number of weeks in an ISO week-numbering year of the given date.\r\n *\r\n * @description\r\n * Get the number of weeks in an ISO week-numbering year of the given date.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @param {Date|String|Number} date - the given date\r\n * @returns {Number} the number of ISO weeks in a year\r\n *\r\n * @example\r\n * // How many weeks are in ISO week-numbering year 2015?\r\n * var result = getISOWeeksInYear(new Date(2015, 1, 11))\r\n * //=> 53\r\n */\n\nfunction getISOWeeksInYear(dirtyDate) {\n  var thisYear = startOfISOYear(dirtyDate);\n  var nextYear = startOfISOYear(addWeeks(thisYear, 60));\n  var diff = nextYear.valueOf() - thisYear.valueOf(); // Round the number of weeks to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK);\n}\n\nmodule.exports = getISOWeeksInYear;","map":{"version":3,"sources":["C:/Users/Dominic/Documents/RepositoriosGitHub/RocketDropbox/React/node_modules/date-fns/get_iso_weeks_in_year/index.js"],"names":["startOfISOYear","require","addWeeks","MILLISECONDS_IN_WEEK","getISOWeeksInYear","dirtyDate","thisYear","nextYear","diff","valueOf","Math","round","module","exports"],"mappings":"AAAA,IAAIA,cAAc,GAAGC,OAAO,CAAC,+BAAD,CAA5B;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,uBAAD,CAAtB;;AAEA,IAAIE,oBAAoB,GAAG,SAA3B;AAEA;;;;;;;;;;;;;;;;;;AAiBA,SAASC,iBAAT,CAA4BC,SAA5B,EAAuC;AACrC,MAAIC,QAAQ,GAAGN,cAAc,CAACK,SAAD,CAA7B;AACA,MAAIE,QAAQ,GAAGP,cAAc,CAACE,QAAQ,CAACI,QAAD,EAAW,EAAX,CAAT,CAA7B;AACA,MAAIE,IAAI,GAAGD,QAAQ,CAACE,OAAT,KAAqBH,QAAQ,CAACG,OAAT,EAAhC,CAHqC,CAIrC;AACA;AACA;;AACA,SAAOC,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAGL,oBAAlB,CAAP;AACD;;AAEDS,MAAM,CAACC,OAAP,GAAiBT,iBAAjB","sourcesContent":["var startOfISOYear = require('../start_of_iso_year/index.js')\r\nvar addWeeks = require('../add_weeks/index.js')\r\n\r\nvar MILLISECONDS_IN_WEEK = 604800000\r\n\r\n/**\r\n * @category ISO Week-Numbering Year Helpers\r\n * @summary Get the number of weeks in an ISO week-numbering year of the given date.\r\n *\r\n * @description\r\n * Get the number of weeks in an ISO week-numbering year of the given date.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @param {Date|String|Number} date - the given date\r\n * @returns {Number} the number of ISO weeks in a year\r\n *\r\n * @example\r\n * // How many weeks are in ISO week-numbering year 2015?\r\n * var result = getISOWeeksInYear(new Date(2015, 1, 11))\r\n * //=> 53\r\n */\r\nfunction getISOWeeksInYear (dirtyDate) {\r\n  var thisYear = startOfISOYear(dirtyDate)\r\n  var nextYear = startOfISOYear(addWeeks(thisYear, 60))\r\n  var diff = nextYear.valueOf() - thisYear.valueOf()\r\n  // Round the number of weeks to the nearest integer\r\n  // because the number of milliseconds in a week is not constant\r\n  // (e.g. it's different in the week of the daylight saving time clock shift)\r\n  return Math.round(diff / MILLISECONDS_IN_WEEK)\r\n}\r\n\r\nmodule.exports = getISOWeeksInYear\r\n"]},"metadata":{},"sourceType":"script"}