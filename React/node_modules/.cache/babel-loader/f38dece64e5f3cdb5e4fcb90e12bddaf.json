{"ast":null,"code":"var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js');\n\nfunction buildFormatLocale() {\n  var months3char = ['jan', 'fev', 'mar', 'abr', 'mai', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez'];\n  var monthsFull = ['janeiro', 'fevereiro', 'março', 'abril', 'maio', 'junho', 'julho', 'agosto', 'setembro', 'outubro', 'novembro', 'dezembro'];\n  var weekdays2char = ['do', 'se', 'te', 'qa', 'qi', 'se', 'sa'];\n  var weekdays3char = ['dom', 'seg', 'ter', 'qua', 'qui', 'sex', 'sáb'];\n  var weekdaysFull = ['domingo', 'segunda-feira', 'terça-feira', 'quarta-feira', 'quinta-feira', 'sexta-feira', 'sábado'];\n  var meridiemUppercase = ['AM', 'PM'];\n  var meridiemLowercase = ['am', 'pm'];\n  var meridiemFull = ['a.m.', 'p.m.'];\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()];\n    },\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()];\n    },\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()];\n    },\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()];\n    },\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()];\n    },\n    // AM, PM\n    'A': function (date) {\n      return date.getHours() / 12 >= 1 ? meridiemUppercase[1] : meridiemUppercase[0];\n    },\n    // am, pm\n    'a': function (date) {\n      return date.getHours() / 12 >= 1 ? meridiemLowercase[1] : meridiemLowercase[0];\n    },\n    // a.m., p.m.\n    'aa': function (date) {\n      return date.getHours() / 12 >= 1 ? meridiemFull[1] : meridiemFull[0];\n    }\n  }; // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W'];\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date));\n    };\n  });\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  };\n}\n\nfunction ordinal(number) {\n  return number + 'º';\n}\n\nmodule.exports = buildFormatLocale;","map":{"version":3,"sources":["C:/Users/DEV05/Documents/GitHub/NodeJS/RocketDropbox/React/node_modules/date-fns/locale/pt/build_format_locale/index.js"],"names":["buildFormattingTokensRegExp","require","buildFormatLocale","months3char","monthsFull","weekdays2char","weekdays3char","weekdaysFull","meridiemUppercase","meridiemLowercase","meridiemFull","formatters","date","getMonth","getDay","getHours","ordinalFormatters","forEach","formatterToken","ordinal","formattingTokensRegExp","number","module","exports"],"mappings":"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","sourcesContent":["var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\r\n\r\nfunction buildFormatLocale () {\r\n  var months3char = ['jan', 'fev', 'mar', 'abr', 'mai', 'jun', 'jul', 'ago', 'set', 'out', 'nov', 'dez']\r\n  var monthsFull = ['janeiro', 'fevereiro', 'março', 'abril', 'maio', 'junho', 'julho', 'agosto', 'setembro', 'outubro', 'novembro', 'dezembro']\r\n  var weekdays2char = ['do', 'se', 'te', 'qa', 'qi', 'se', 'sa']\r\n  var weekdays3char = ['dom', 'seg', 'ter', 'qua', 'qui', 'sex', 'sáb']\r\n  var weekdaysFull = ['domingo', 'segunda-feira', 'terça-feira', 'quarta-feira', 'quinta-feira', 'sexta-feira', 'sábado']\r\n  var meridiemUppercase = ['AM', 'PM']\r\n  var meridiemLowercase = ['am', 'pm']\r\n  var meridiemFull = ['a.m.', 'p.m.']\r\n\r\n  var formatters = {\r\n    // Month: Jan, Feb, ..., Dec\r\n    'MMM': function (date) {\r\n      return months3char[date.getMonth()]\r\n    },\r\n\r\n    // Month: January, February, ..., December\r\n    'MMMM': function (date) {\r\n      return monthsFull[date.getMonth()]\r\n    },\r\n\r\n    // Day of week: Su, Mo, ..., Sa\r\n    'dd': function (date) {\r\n      return weekdays2char[date.getDay()]\r\n    },\r\n\r\n    // Day of week: Sun, Mon, ..., Sat\r\n    'ddd': function (date) {\r\n      return weekdays3char[date.getDay()]\r\n    },\r\n\r\n    // Day of week: Sunday, Monday, ..., Saturday\r\n    'dddd': function (date) {\r\n      return weekdaysFull[date.getDay()]\r\n    },\r\n\r\n    // AM, PM\r\n    'A': function (date) {\r\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\r\n    },\r\n\r\n    // am, pm\r\n    'a': function (date) {\r\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\r\n    },\r\n\r\n    // a.m., p.m.\r\n    'aa': function (date) {\r\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\r\n    }\r\n  }\r\n\r\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\r\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\r\n  ordinalFormatters.forEach(function (formatterToken) {\r\n    formatters[formatterToken + 'o'] = function (date, formatters) {\r\n      return ordinal(formatters[formatterToken](date))\r\n    }\r\n  })\r\n\r\n  return {\r\n    formatters: formatters,\r\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\r\n  }\r\n}\r\n\r\nfunction ordinal (number) {\r\n  return number + 'º'\r\n}\r\n\r\nmodule.exports = buildFormatLocale\r\n"]},"metadata":{},"sourceType":"script"}