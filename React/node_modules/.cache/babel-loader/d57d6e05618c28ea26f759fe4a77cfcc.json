{"ast":null,"code":"/**\r\n * This is the common logic for both the Node.js and web browser\r\n * implementations of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n/**\r\n * Active `debug` instances.\r\n */\n\nexports.instances = [];\n/**\r\n * The currently active debug mode names, and names to skip.\r\n */\n\nexports.names = [];\nexports.skips = [];\n/**\r\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\r\n *\r\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\r\n */\n\nexports.formatters = {};\n/**\r\n * Select a color.\r\n * @param {String} namespace\r\n * @return {Number}\r\n * @api private\r\n */\n\nfunction selectColor(namespace) {\n  var hash = 0,\n      i;\n\n  for (i in namespace) {\n    hash = (hash << 5) - hash + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n/**\r\n * Create a debugger with the given `namespace`.\r\n *\r\n * @param {String} namespace\r\n * @return {Function}\r\n * @api public\r\n */\n\n\nfunction createDebug(namespace) {\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n    var self = debug; // set `diff` timestamp\n\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr; // turn the `arguments` into a proper Array\n\n    var args = new Array(arguments.length);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    } // apply any `formatters` transformations\n\n\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val); // now we need to remove `args[index]` since it's inlined in the `format`\n\n        args.splice(index, 1);\n        index--;\n      }\n\n      return match;\n    }); // apply env-specific formatting (colors, etc.)\n\n    exports.formatArgs.call(self, args);\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy; // env-specific initialization logic for debug instances\n\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n  return debug;\n}\n\nfunction destroy() {\n  var index = exports.instances.indexOf(this);\n\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n/**\r\n * Enables a debug mode by namespaces. This can include modes\r\n * separated by a colon and wildcards.\r\n *\r\n * @param {String} namespaces\r\n * @api public\r\n */\n\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n  exports.names = [];\n  exports.skips = [];\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n\n    namespaces = split[i].replace(/\\*/g, '.*?');\n\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n/**\r\n * Disable debug output.\r\n *\r\n * @api public\r\n */\n\n\nfunction disable() {\n  exports.enable('');\n}\n/**\r\n * Returns true if the given mode name is enabled, false otherwise.\r\n *\r\n * @param {String} name\r\n * @return {Boolean}\r\n * @api public\r\n */\n\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n\n  var i, len;\n\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\r\n * Coerce `val`.\r\n *\r\n * @param {Mixed} val\r\n * @return {Mixed}\r\n * @api private\r\n */\n\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}","map":{"version":3,"sources":["C:/Users/Dominic/Documents/RocketDropbox/node_modules/socket.io-parser/node_modules/debug/src/debug.js"],"names":["exports","module","createDebug","debug","coerce","disable","enable","enabled","humanize","require","instances","names","skips","formatters","selectColor","namespace","hash","i","charCodeAt","colors","Math","abs","length","prevTime","self","curr","Date","ms","diff","prev","args","Array","arguments","unshift","index","replace","match","format","formatter","val","call","splice","formatArgs","logFn","log","console","bind","apply","useColors","color","destroy","init","push","indexOf","namespaces","save","split","len","RegExp","substr","instance","name","test","Error","stack","message"],"mappings":"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","sourcesContent":["\r\n/**\r\n * This is the common logic for both the Node.js and web browser\r\n * implementations of `debug()`.\r\n *\r\n * Expose `debug()` as the module.\r\n */\r\n\r\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\r\nexports.coerce = coerce;\r\nexports.disable = disable;\r\nexports.enable = enable;\r\nexports.enabled = enabled;\r\nexports.humanize = require('ms');\r\n\r\n/**\r\n * Active `debug` instances.\r\n */\r\nexports.instances = [];\r\n\r\n/**\r\n * The currently active debug mode names, and names to skip.\r\n */\r\n\r\nexports.names = [];\r\nexports.skips = [];\r\n\r\n/**\r\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\r\n *\r\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\r\n */\r\n\r\nexports.formatters = {};\r\n\r\n/**\r\n * Select a color.\r\n * @param {String} namespace\r\n * @return {Number}\r\n * @api private\r\n */\r\n\r\nfunction selectColor(namespace) {\r\n  var hash = 0, i;\r\n\r\n  for (i in namespace) {\r\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\r\n    hash |= 0; // Convert to 32bit integer\r\n  }\r\n\r\n  return exports.colors[Math.abs(hash) % exports.colors.length];\r\n}\r\n\r\n/**\r\n * Create a debugger with the given `namespace`.\r\n *\r\n * @param {String} namespace\r\n * @return {Function}\r\n * @api public\r\n */\r\n\r\nfunction createDebug(namespace) {\r\n\r\n  var prevTime;\r\n\r\n  function debug() {\r\n    // disabled?\r\n    if (!debug.enabled) return;\r\n\r\n    var self = debug;\r\n\r\n    // set `diff` timestamp\r\n    var curr = +new Date();\r\n    var ms = curr - (prevTime || curr);\r\n    self.diff = ms;\r\n    self.prev = prevTime;\r\n    self.curr = curr;\r\n    prevTime = curr;\r\n\r\n    // turn the `arguments` into a proper Array\r\n    var args = new Array(arguments.length);\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i];\r\n    }\r\n\r\n    args[0] = exports.coerce(args[0]);\r\n\r\n    if ('string' !== typeof args[0]) {\r\n      // anything else let's inspect with %O\r\n      args.unshift('%O');\r\n    }\r\n\r\n    // apply any `formatters` transformations\r\n    var index = 0;\r\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\r\n      // if we encounter an escaped % then don't increase the array index\r\n      if (match === '%%') return match;\r\n      index++;\r\n      var formatter = exports.formatters[format];\r\n      if ('function' === typeof formatter) {\r\n        var val = args[index];\r\n        match = formatter.call(self, val);\r\n\r\n        // now we need to remove `args[index]` since it's inlined in the `format`\r\n        args.splice(index, 1);\r\n        index--;\r\n      }\r\n      return match;\r\n    });\r\n\r\n    // apply env-specific formatting (colors, etc.)\r\n    exports.formatArgs.call(self, args);\r\n\r\n    var logFn = debug.log || exports.log || console.log.bind(console);\r\n    logFn.apply(self, args);\r\n  }\r\n\r\n  debug.namespace = namespace;\r\n  debug.enabled = exports.enabled(namespace);\r\n  debug.useColors = exports.useColors();\r\n  debug.color = selectColor(namespace);\r\n  debug.destroy = destroy;\r\n\r\n  // env-specific initialization logic for debug instances\r\n  if ('function' === typeof exports.init) {\r\n    exports.init(debug);\r\n  }\r\n\r\n  exports.instances.push(debug);\r\n\r\n  return debug;\r\n}\r\n\r\nfunction destroy () {\r\n  var index = exports.instances.indexOf(this);\r\n  if (index !== -1) {\r\n    exports.instances.splice(index, 1);\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Enables a debug mode by namespaces. This can include modes\r\n * separated by a colon and wildcards.\r\n *\r\n * @param {String} namespaces\r\n * @api public\r\n */\r\n\r\nfunction enable(namespaces) {\r\n  exports.save(namespaces);\r\n\r\n  exports.names = [];\r\n  exports.skips = [];\r\n\r\n  var i;\r\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\r\n  var len = split.length;\r\n\r\n  for (i = 0; i < len; i++) {\r\n    if (!split[i]) continue; // ignore empty strings\r\n    namespaces = split[i].replace(/\\*/g, '.*?');\r\n    if (namespaces[0] === '-') {\r\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\r\n    } else {\r\n      exports.names.push(new RegExp('^' + namespaces + '$'));\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < exports.instances.length; i++) {\r\n    var instance = exports.instances[i];\r\n    instance.enabled = exports.enabled(instance.namespace);\r\n  }\r\n}\r\n\r\n/**\r\n * Disable debug output.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction disable() {\r\n  exports.enable('');\r\n}\r\n\r\n/**\r\n * Returns true if the given mode name is enabled, false otherwise.\r\n *\r\n * @param {String} name\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nfunction enabled(name) {\r\n  if (name[name.length - 1] === '*') {\r\n    return true;\r\n  }\r\n  var i, len;\r\n  for (i = 0, len = exports.skips.length; i < len; i++) {\r\n    if (exports.skips[i].test(name)) {\r\n      return false;\r\n    }\r\n  }\r\n  for (i = 0, len = exports.names.length; i < len; i++) {\r\n    if (exports.names[i].test(name)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Coerce `val`.\r\n *\r\n * @param {Mixed} val\r\n * @return {Mixed}\r\n * @api private\r\n */\r\n\r\nfunction coerce(val) {\r\n  if (val instanceof Error) return val.stack || val.message;\r\n  return val;\r\n}\r\n"]},"metadata":{},"sourceType":"script"}