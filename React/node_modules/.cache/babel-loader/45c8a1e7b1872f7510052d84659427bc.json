{"ast":null,"code":"var parse = require('../parse/index.js');\n\nvar differenceInCalendarYears = require('../difference_in_calendar_years/index.js');\n\nvar compareAsc = require('../compare_asc/index.js');\n/**\r\n * @category Year Helpers\r\n * @summary Get the number of full years between the given dates.\r\n *\r\n * @description\r\n * Get the number of full years between the given dates.\r\n *\r\n * @param {Date|String|Number} dateLeft - the later date\r\n * @param {Date|String|Number} dateRight - the earlier date\r\n * @returns {Number} the number of full years\r\n *\r\n * @example\r\n * // How many full years are between 31 December 2013 and 11 February 2015?\r\n * var result = differenceInYears(\r\n *   new Date(2015, 1, 11),\r\n *   new Date(2013, 11, 31)\r\n * )\r\n * //=> 1\r\n */\n\n\nfunction differenceInYears(dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft);\n  var dateRight = parse(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarYears(dateLeft, dateRight));\n  dateLeft.setFullYear(dateLeft.getFullYear() - sign * difference); // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastYearNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  return sign * (difference - isLastYearNotFull);\n}\n\nmodule.exports = differenceInYears;","map":{"version":3,"sources":["C:/Users/DEV05/Documents/GitHub/NodeJS/RocketDropbox/React/node_modules/date-fns/difference_in_years/index.js"],"names":["parse","require","differenceInCalendarYears","compareAsc","differenceInYears","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","sign","difference","Math","abs","setFullYear","getFullYear","isLastYearNotFull","module","exports"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,mBAAD,CAAnB;;AACA,IAAIC,yBAAyB,GAAGD,OAAO,CAAC,0CAAD,CAAvC;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,yBAAD,CAAxB;AAEA;;;;;;;;;;;;;;;;;;;;;AAmBA,SAASG,iBAAT,CAA4BC,aAA5B,EAA2CC,cAA3C,EAA2D;AACzD,MAAIC,QAAQ,GAAGP,KAAK,CAACK,aAAD,CAApB;AACA,MAAIG,SAAS,GAAGR,KAAK,CAACM,cAAD,CAArB;AAEA,MAAIG,IAAI,GAAGN,UAAU,CAACI,QAAD,EAAWC,SAAX,CAArB;AACA,MAAIE,UAAU,GAAGC,IAAI,CAACC,GAAL,CAASV,yBAAyB,CAACK,QAAD,EAAWC,SAAX,CAAlC,CAAjB;AACAD,EAAAA,QAAQ,CAACM,WAAT,CAAqBN,QAAQ,CAACO,WAAT,KAAyBL,IAAI,GAAGC,UAArD,EANyD,CAQzD;AACA;;AACA,MAAIK,iBAAiB,GAAGZ,UAAU,CAACI,QAAD,EAAWC,SAAX,CAAV,KAAoC,CAACC,IAA7D;AACA,SAAOA,IAAI,IAAIC,UAAU,GAAGK,iBAAjB,CAAX;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBb,iBAAjB","sourcesContent":["var parse = require('../parse/index.js')\r\nvar differenceInCalendarYears = require('../difference_in_calendar_years/index.js')\r\nvar compareAsc = require('../compare_asc/index.js')\r\n\r\n/**\r\n * @category Year Helpers\r\n * @summary Get the number of full years between the given dates.\r\n *\r\n * @description\r\n * Get the number of full years between the given dates.\r\n *\r\n * @param {Date|String|Number} dateLeft - the later date\r\n * @param {Date|String|Number} dateRight - the earlier date\r\n * @returns {Number} the number of full years\r\n *\r\n * @example\r\n * // How many full years are between 31 December 2013 and 11 February 2015?\r\n * var result = differenceInYears(\r\n *   new Date(2015, 1, 11),\r\n *   new Date(2013, 11, 31)\r\n * )\r\n * //=> 1\r\n */\r\nfunction differenceInYears (dirtyDateLeft, dirtyDateRight) {\r\n  var dateLeft = parse(dirtyDateLeft)\r\n  var dateRight = parse(dirtyDateRight)\r\n\r\n  var sign = compareAsc(dateLeft, dateRight)\r\n  var difference = Math.abs(differenceInCalendarYears(dateLeft, dateRight))\r\n  dateLeft.setFullYear(dateLeft.getFullYear() - sign * difference)\r\n\r\n  // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\r\n  // If so, result must be decreased by 1 in absolute value\r\n  var isLastYearNotFull = compareAsc(dateLeft, dateRight) === -sign\r\n  return sign * (difference - isLastYearNotFull)\r\n}\r\n\r\nmodule.exports = differenceInYears\r\n"]},"metadata":{},"sourceType":"script"}