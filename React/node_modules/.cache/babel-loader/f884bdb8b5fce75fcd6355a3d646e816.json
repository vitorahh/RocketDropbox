{"ast":null,"code":"var parse = require('../parse/index.js');\n/**\r\n * @category Common Helpers\r\n * @summary Is the first date before the second one?\r\n *\r\n * @description\r\n * Is the first date before the second one?\r\n *\r\n * @param {Date|String|Number} date - the date that should be before the other one to return true\r\n * @param {Date|String|Number} dateToCompare - the date to compare with\r\n * @returns {Boolean} the first date is before the second date\r\n *\r\n * @example\r\n * // Is 10 July 1989 before 11 February 1987?\r\n * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\r\n * //=> false\r\n */\n\n\nfunction isBefore(dirtyDate, dirtyDateToCompare) {\n  var date = parse(dirtyDate);\n  var dateToCompare = parse(dirtyDateToCompare);\n  return date.getTime() < dateToCompare.getTime();\n}\n\nmodule.exports = isBefore;","map":{"version":3,"sources":["C:/Users/Dominic/Documents/RepositoriosGitHub/RocketDropbox/React/node_modules/date-fns/is_before/index.js"],"names":["parse","require","isBefore","dirtyDate","dirtyDateToCompare","date","dateToCompare","getTime","module","exports"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,mBAAD,CAAnB;AAEA;;;;;;;;;;;;;;;;;;AAgBA,SAASC,QAAT,CAAmBC,SAAnB,EAA8BC,kBAA9B,EAAkD;AAChD,MAAIC,IAAI,GAAGL,KAAK,CAACG,SAAD,CAAhB;AACA,MAAIG,aAAa,GAAGN,KAAK,CAACI,kBAAD,CAAzB;AACA,SAAOC,IAAI,CAACE,OAAL,KAAiBD,aAAa,CAACC,OAAd,EAAxB;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBP,QAAjB","sourcesContent":["var parse = require('../parse/index.js')\r\n\r\n/**\r\n * @category Common Helpers\r\n * @summary Is the first date before the second one?\r\n *\r\n * @description\r\n * Is the first date before the second one?\r\n *\r\n * @param {Date|String|Number} date - the date that should be before the other one to return true\r\n * @param {Date|String|Number} dateToCompare - the date to compare with\r\n * @returns {Boolean} the first date is before the second date\r\n *\r\n * @example\r\n * // Is 10 July 1989 before 11 February 1987?\r\n * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\r\n * //=> false\r\n */\r\nfunction isBefore (dirtyDate, dirtyDateToCompare) {\r\n  var date = parse(dirtyDate)\r\n  var dateToCompare = parse(dirtyDateToCompare)\r\n  return date.getTime() < dateToCompare.getTime()\r\n}\r\n\r\nmodule.exports = isBefore\r\n"]},"metadata":{},"sourceType":"script"}