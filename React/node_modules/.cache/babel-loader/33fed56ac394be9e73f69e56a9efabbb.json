{"ast":null,"code":"var startOfWeek = require('../start_of_week/index.js');\n/**\r\n * @category Week Helpers\r\n * @summary Are the given dates in the same week?\r\n *\r\n * @description\r\n * Are the given dates in the same week?\r\n *\r\n * @param {Date|String|Number} dateLeft - the first date to check\r\n * @param {Date|String|Number} dateRight - the second date to check\r\n * @param {Object} [options] - the object with options\r\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\r\n * @returns {Boolean} the dates are in the same week\r\n *\r\n * @example\r\n * // Are 31 August 2014 and 4 September 2014 in the same week?\r\n * var result = isSameWeek(\r\n *   new Date(2014, 7, 31),\r\n *   new Date(2014, 8, 4)\r\n * )\r\n * //=> true\r\n *\r\n * @example\r\n * // If week starts with Monday,\r\n * // are 31 August 2014 and 4 September 2014 in the same week?\r\n * var result = isSameWeek(\r\n *   new Date(2014, 7, 31),\r\n *   new Date(2014, 8, 4),\r\n *   {weekStartsOn: 1}\r\n * )\r\n * //=> false\r\n */\n\n\nfunction isSameWeek(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  var dateLeftStartOfWeek = startOfWeek(dirtyDateLeft, dirtyOptions);\n  var dateRightStartOfWeek = startOfWeek(dirtyDateRight, dirtyOptions);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}\n\nmodule.exports = isSameWeek;","map":{"version":3,"sources":["C:/Users/Dominic/Documents/RocketDropbox/node_modules/date-fns/is_same_week/index.js"],"names":["startOfWeek","require","isSameWeek","dirtyDateLeft","dirtyDateRight","dirtyOptions","dateLeftStartOfWeek","dateRightStartOfWeek","getTime","module","exports"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,2BAAD,CAAzB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,SAASC,UAAT,CAAqBC,aAArB,EAAoCC,cAApC,EAAoDC,YAApD,EAAkE;AAChE,MAAIC,mBAAmB,GAAGN,WAAW,CAACG,aAAD,EAAgBE,YAAhB,CAArC;AACA,MAAIE,oBAAoB,GAAGP,WAAW,CAACI,cAAD,EAAiBC,YAAjB,CAAtC;AAEA,SAAOC,mBAAmB,CAACE,OAApB,OAAkCD,oBAAoB,CAACC,OAArB,EAAzC;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBR,UAAjB","sourcesContent":["var startOfWeek = require('../start_of_week/index.js')\r\n\r\n/**\r\n * @category Week Helpers\r\n * @summary Are the given dates in the same week?\r\n *\r\n * @description\r\n * Are the given dates in the same week?\r\n *\r\n * @param {Date|String|Number} dateLeft - the first date to check\r\n * @param {Date|String|Number} dateRight - the second date to check\r\n * @param {Object} [options] - the object with options\r\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\r\n * @returns {Boolean} the dates are in the same week\r\n *\r\n * @example\r\n * // Are 31 August 2014 and 4 September 2014 in the same week?\r\n * var result = isSameWeek(\r\n *   new Date(2014, 7, 31),\r\n *   new Date(2014, 8, 4)\r\n * )\r\n * //=> true\r\n *\r\n * @example\r\n * // If week starts with Monday,\r\n * // are 31 August 2014 and 4 September 2014 in the same week?\r\n * var result = isSameWeek(\r\n *   new Date(2014, 7, 31),\r\n *   new Date(2014, 8, 4),\r\n *   {weekStartsOn: 1}\r\n * )\r\n * //=> false\r\n */\r\nfunction isSameWeek (dirtyDateLeft, dirtyDateRight, dirtyOptions) {\r\n  var dateLeftStartOfWeek = startOfWeek(dirtyDateLeft, dirtyOptions)\r\n  var dateRightStartOfWeek = startOfWeek(dirtyDateRight, dirtyOptions)\r\n\r\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime()\r\n}\r\n\r\nmodule.exports = isSameWeek\r\n"]},"metadata":{},"sourceType":"script"}