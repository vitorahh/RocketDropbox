{"ast":null,"code":"var parse = require('../parse/index.js');\n\nvar addDays = require('../add_days/index.js');\n/**\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} day - the day of the week of the new date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the new date with the day of the week setted\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * var result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If week starts with Monday, set Sunday to 1 September 2014:\n * var result = setDay(new Date(2014, 8, 1), 0, {weekStartsOn: 1})\n * //=> Sun Sep 07 2014 00:00:00\n */\n\n\nfunction setDay(dirtyDate, dirtyDay, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? Number(dirtyOptions.weekStartsOn) || 0 : 0;\n  var date = parse(dirtyDate);\n  var day = Number(dirtyDay);\n  var currentDay = date.getDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  return addDays(date, diff);\n}\n\nmodule.exports = setDay;","map":{"version":3,"sources":["C:/Users/DEV05/OneDrive/Developers/arthasfront/node_modules/date-fns/set_day/index.js"],"names":["parse","require","addDays","setDay","dirtyDate","dirtyDay","dirtyOptions","weekStartsOn","Number","date","day","currentDay","getDay","remainder","dayIndex","diff","module","exports"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,mBAAD,CAAnB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,sBAAD,CAArB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAASE,MAAT,CAAiBC,SAAjB,EAA4BC,QAA5B,EAAsCC,YAAtC,EAAoD;AAClD,MAAIC,YAAY,GAAGD,YAAY,GAAIE,MAAM,CAACF,YAAY,CAACC,YAAd,CAAN,IAAqC,CAAzC,GAA8C,CAA7E;AACA,MAAIE,IAAI,GAAGT,KAAK,CAACI,SAAD,CAAhB;AACA,MAAIM,GAAG,GAAGF,MAAM,CAACH,QAAD,CAAhB;AACA,MAAIM,UAAU,GAAGF,IAAI,CAACG,MAAL,EAAjB;AAEA,MAAIC,SAAS,GAAGH,GAAG,GAAG,CAAtB;AACA,MAAII,QAAQ,GAAG,CAACD,SAAS,GAAG,CAAb,IAAkB,CAAjC;AAEA,MAAIE,IAAI,GAAG,CAACD,QAAQ,GAAGP,YAAX,GAA0B,CAA1B,GAA8B,CAA/B,IAAoCG,GAApC,GAA0CC,UAArD;AACA,SAAOT,OAAO,CAACO,IAAD,EAAOM,IAAP,CAAd;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBd,MAAjB","sourcesContent":["var parse = require('../parse/index.js')\nvar addDays = require('../add_days/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} day - the day of the week of the new date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the new date with the day of the week setted\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * var result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If week starts with Monday, set Sunday to 1 September 2014:\n * var result = setDay(new Date(2014, 8, 1), 0, {weekStartsOn: 1})\n * //=> Sun Sep 07 2014 00:00:00\n */\nfunction setDay (dirtyDate, dirtyDay, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n  var date = parse(dirtyDate)\n  var day = Number(dirtyDay)\n  var currentDay = date.getDay()\n\n  var remainder = day % 7\n  var dayIndex = (remainder + 7) % 7\n\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay\n  return addDays(date, diff)\n}\n\nmodule.exports = setDay\n"]},"metadata":{},"sourceType":"script"}