{"ast":null,"code":"var parse = require('../parse/index.js');\n/**\r\n * @category Week Helpers\r\n * @summary Return the end of a week for the given date.\r\n *\r\n * @description\r\n * Return the end of a week for the given date.\r\n * The result will be in the local timezone.\r\n *\r\n * @param {Date|String|Number} date - the original date\r\n * @param {Object} [options] - the object with options\r\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\r\n * @returns {Date} the end of a week\r\n *\r\n * @example\r\n * // The end of a week for 2 September 2014 11:55:00:\r\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\r\n * //=> Sat Sep 06 2014 23:59:59.999\r\n *\r\n * @example\r\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\r\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\r\n * //=> Sun Sep 07 2014 23:59:59.999\r\n */\n\n\nfunction endOfWeek(dirtyDate, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? Number(dirtyOptions.weekStartsOn) || 0 : 0;\n  var date = parse(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}\n\nmodule.exports = endOfWeek;","map":{"version":3,"sources":["C:/Users/Dominic/Documents/RepositoriosGitHub/RocketDropbox/React/node_modules/date-fns/end_of_week/index.js"],"names":["parse","require","endOfWeek","dirtyDate","dirtyOptions","weekStartsOn","Number","date","day","getDay","diff","setDate","getDate","setHours","module","exports"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,mBAAD,CAAnB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAASC,SAAT,CAAoBC,SAApB,EAA+BC,YAA/B,EAA6C;AAC3C,MAAIC,YAAY,GAAGD,YAAY,GAAIE,MAAM,CAACF,YAAY,CAACC,YAAd,CAAN,IAAqC,CAAzC,GAA8C,CAA7E;AAEA,MAAIE,IAAI,GAAGP,KAAK,CAACG,SAAD,CAAhB;AACA,MAAIK,GAAG,GAAGD,IAAI,CAACE,MAAL,EAAV;AACA,MAAIC,IAAI,GAAG,CAACF,GAAG,GAAGH,YAAN,GAAqB,CAAC,CAAtB,GAA0B,CAA3B,IAAgC,CAAhC,IAAqCG,GAAG,GAAGH,YAA3C,CAAX;AAEAE,EAAAA,IAAI,CAACI,OAAL,CAAaJ,IAAI,CAACK,OAAL,KAAiBF,IAA9B;AACAH,EAAAA,IAAI,CAACM,QAAL,CAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,GAA1B;AACA,SAAON,IAAP;AACD;;AAEDO,MAAM,CAACC,OAAP,GAAiBb,SAAjB","sourcesContent":["var parse = require('../parse/index.js')\r\n\r\n/**\r\n * @category Week Helpers\r\n * @summary Return the end of a week for the given date.\r\n *\r\n * @description\r\n * Return the end of a week for the given date.\r\n * The result will be in the local timezone.\r\n *\r\n * @param {Date|String|Number} date - the original date\r\n * @param {Object} [options] - the object with options\r\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\r\n * @returns {Date} the end of a week\r\n *\r\n * @example\r\n * // The end of a week for 2 September 2014 11:55:00:\r\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\r\n * //=> Sat Sep 06 2014 23:59:59.999\r\n *\r\n * @example\r\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\r\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\r\n * //=> Sun Sep 07 2014 23:59:59.999\r\n */\r\nfunction endOfWeek (dirtyDate, dirtyOptions) {\r\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\r\n\r\n  var date = parse(dirtyDate)\r\n  var day = date.getDay()\r\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn)\r\n\r\n  date.setDate(date.getDate() + diff)\r\n  date.setHours(23, 59, 59, 999)\r\n  return date\r\n}\r\n\r\nmodule.exports = endOfWeek\r\n"]},"metadata":{},"sourceType":"script"}