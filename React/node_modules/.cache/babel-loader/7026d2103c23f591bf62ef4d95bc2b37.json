{"ast":null,"code":"var parse = require('../parse/index.js');\n\nvar differenceInCalendarISOYears = require('../difference_in_calendar_iso_years/index.js');\n\nvar compareAsc = require('../compare_asc/index.js');\n\nvar subISOYears = require('../sub_iso_years/index.js');\n/**\r\n * @category ISO Week-Numbering Year Helpers\r\n * @summary Get the number of full ISO week-numbering years between the given dates.\r\n *\r\n * @description\r\n * Get the number of full ISO week-numbering years between the given dates.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @param {Date|String|Number} dateLeft - the later date\r\n * @param {Date|String|Number} dateRight - the earlier date\r\n * @returns {Number} the number of full ISO week-numbering years\r\n *\r\n * @example\r\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\r\n * var result = differenceInISOYears(\r\n *   new Date(2012, 0, 1),\r\n *   new Date(2010, 0, 1)\r\n * )\r\n * //=> 1\r\n */\n\n\nfunction differenceInISOYears(dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft);\n  var dateRight = parse(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarISOYears(dateLeft, dateRight));\n  dateLeft = subISOYears(dateLeft, sign * difference); // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1\n  // if last calendar ISO year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastISOYearNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  return sign * (difference - isLastISOYearNotFull);\n}\n\nmodule.exports = differenceInISOYears;","map":{"version":3,"sources":["C:/Users/DEV05/Documents/GitHub/NodeJS/RocketDropbox/React/node_modules/date-fns/difference_in_iso_years/index.js"],"names":["parse","require","differenceInCalendarISOYears","compareAsc","subISOYears","differenceInISOYears","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","sign","difference","Math","abs","isLastISOYearNotFull","module","exports"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,mBAAD,CAAnB;;AACA,IAAIC,4BAA4B,GAAGD,OAAO,CAAC,8CAAD,CAA1C;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,yBAAD,CAAxB;;AACA,IAAIG,WAAW,GAAGH,OAAO,CAAC,2BAAD,CAAzB;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAqBA,SAASI,oBAAT,CAA+BC,aAA/B,EAA8CC,cAA9C,EAA8D;AAC5D,MAAIC,QAAQ,GAAGR,KAAK,CAACM,aAAD,CAApB;AACA,MAAIG,SAAS,GAAGT,KAAK,CAACO,cAAD,CAArB;AAEA,MAAIG,IAAI,GAAGP,UAAU,CAACK,QAAD,EAAWC,SAAX,CAArB;AACA,MAAIE,UAAU,GAAGC,IAAI,CAACC,GAAL,CAASX,4BAA4B,CAACM,QAAD,EAAWC,SAAX,CAArC,CAAjB;AACAD,EAAAA,QAAQ,GAAGJ,WAAW,CAACI,QAAD,EAAWE,IAAI,GAAGC,UAAlB,CAAtB,CAN4D,CAQ5D;AACA;AACA;;AACA,MAAIG,oBAAoB,GAAGX,UAAU,CAACK,QAAD,EAAWC,SAAX,CAAV,KAAoC,CAACC,IAAhE;AACA,SAAOA,IAAI,IAAIC,UAAU,GAAGG,oBAAjB,CAAX;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBX,oBAAjB","sourcesContent":["var parse = require('../parse/index.js')\r\nvar differenceInCalendarISOYears = require('../difference_in_calendar_iso_years/index.js')\r\nvar compareAsc = require('../compare_asc/index.js')\r\nvar subISOYears = require('../sub_iso_years/index.js')\r\n\r\n/**\r\n * @category ISO Week-Numbering Year Helpers\r\n * @summary Get the number of full ISO week-numbering years between the given dates.\r\n *\r\n * @description\r\n * Get the number of full ISO week-numbering years between the given dates.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @param {Date|String|Number} dateLeft - the later date\r\n * @param {Date|String|Number} dateRight - the earlier date\r\n * @returns {Number} the number of full ISO week-numbering years\r\n *\r\n * @example\r\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\r\n * var result = differenceInISOYears(\r\n *   new Date(2012, 0, 1),\r\n *   new Date(2010, 0, 1)\r\n * )\r\n * //=> 1\r\n */\r\nfunction differenceInISOYears (dirtyDateLeft, dirtyDateRight) {\r\n  var dateLeft = parse(dirtyDateLeft)\r\n  var dateRight = parse(dirtyDateRight)\r\n\r\n  var sign = compareAsc(dateLeft, dateRight)\r\n  var difference = Math.abs(differenceInCalendarISOYears(dateLeft, dateRight))\r\n  dateLeft = subISOYears(dateLeft, sign * difference)\r\n\r\n  // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1\r\n  // if last calendar ISO year is not full\r\n  // If so, result must be decreased by 1 in absolute value\r\n  var isLastISOYearNotFull = compareAsc(dateLeft, dateRight) === -sign\r\n  return sign * (difference - isLastISOYearNotFull)\r\n}\r\n\r\nmodule.exports = differenceInISOYears\r\n"]},"metadata":{},"sourceType":"script"}